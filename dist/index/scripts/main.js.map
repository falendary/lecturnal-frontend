{"version":3,"sources":["src/index/scripts/editor-features/components/interfaces/IEditorButton.ts","src/index/scripts/editor-features/models/selectionData.ts","src/index/scripts/editor-features/helpers/selection.helper.ts","src/index/scripts/editor-features/helpers/node.helper.ts","src/index/scripts/editor-features/components/b-component/b.component.ts","src/index/scripts/editor-features/components/i-component/i.component.ts","src/index/scripts/editor-features/components/u-component/u.component.ts","src/index/scripts/editor-features/components/text-center-component/text-center.component.ts","src/index/scripts/editor-features/components/text-right-component/text-right.component.ts","src/index/scripts/editor-features/components/text-left-component/text-left.component.ts","src/index/scripts/editor-features/components/ul-component/ul.component.ts","src/index/scripts/editor-features/components/ol-component/ol.component.ts","src/index/scripts/editor-features/components/text-justify-component/text-justify.component.ts","src/index/scripts/editor-features/components/indent-component/indent.component.ts","src/index/scripts/editor-features/components/outdent-component/outdent.component.ts","src/index/scripts/editor-features/components/strike-component/strike.component.ts","src/index/scripts/editor-features/components/subscript-component/subscript.component.ts","src/index/scripts/editor-features/components/superscript-component/superscript.component.ts","src/index/scripts/editor-features/components/hr-component/hr.component.ts","src/index/scripts/editor-features/components/format-block-component/foramt-block.component.ts","src/index/scripts/editor-features/components/rf-component/rf.component.ts","src/index/scripts/editor-features/components/font-size-component/font-size.component.ts","src/index/scripts/editor-features/components/font-name-component/font-name.component.ts","src/index/scripts/editor-features/components/create-link-component/create-link.component.ts","src/index/scripts/editor-features/components/unlink-component/unlink.component.ts","src/index/scripts/editor-features/components/insert-image-component/insert-image.component.ts","src/index/scripts/editor-features/editor-featrues.module.ts","src/index/scripts/app/services/cookie.service.ts","src/index/scripts/app/repositories/auth.repository.ts","src/index/scripts/app/services/auth.service.ts","src/index/scripts/app/components/shell-component/shell.component.ts","src/index/scripts/app/components/login-component/login.component.ts","src/index/scripts/app/components/registration-component/registration.component.ts","src/index/scripts/app/models/interfaces/IEntity.ts","src/index/scripts/app/models/Slide.ts","src/index/scripts/app/models/Presentation.ts","src/index/scripts/app/models/interfaces/IQueryParameter.ts","src/index/scripts/app/repositories/interfaces/IRepository.ts","src/index/scripts/app/helpers/url.helper.ts","src/index/scripts/app/repositories/presentation.repository.ts","src/index/scripts/app/services/presentation.service.ts","src/index/scripts/app/repositories/slide.repository.ts","src/index/scripts/app/services/slide.service.ts","src/index/scripts/app/components/dashboard-component/dashboard.component.ts","src/index/scripts/app/helpers/controller.helper.ts","src/index/scripts/app/components/presentation-component/presentation.component.ts","src/index/scripts/app/components/slide-editor-component/slide-editor.component.ts","src/index/scripts/app/models/SlideViewModel.ts","src/index/scripts/app/components/slides-list-component/slides-list.component.ts","src/index/scripts/app/directives/content-editable.directive.ts","src/index/scripts/app/app.routing.ts","src/index/scripts/app/app.module.ts","src/index/scripts/main.ts","src/index/scripts/editor-features/components/b-component/b.component-old.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export interface IEditorButton {\n\n    wrapSelected() :void\n\n}","export class SelectionData {\n\n    offsetFrom:number;\n    offsetTo:number;\n\n    startString:string;\n    middleString:string;\n    endString:string;\n}","import {SelectionData} from \"../models/selectionData\";\nexport class SelectionHelper {\n\n    public static getSelectionData():SelectionData {\n\n        let selectionData:SelectionData = new SelectionData();\n\n        let selection = window.getSelection();\n\n        let offsetFrom:number = selection.focusOffset;\n        let offsetTo:number = selection.anchorOffset;\n\n        if (selection.focusOffset > selection.anchorOffset) {\n            offsetFrom = selection.anchorOffset;\n            offsetTo = selection.focusOffset;\n        }\n\n        let node:any = selection.focusNode;\n\n        //console.log('node.nodeValue', node.nodeValue);\n\n        console.log('node', {n: node});\n        console.log('selection', selection);\n\n        let startString = node.textContent.slice(0, offsetFrom);\n        let middleString = node.textContent.slice(offsetFrom, offsetTo);\n        let endString = node.textContent.slice(offsetTo, node.textContent.length);\n\n        selectionData.offsetFrom = offsetFrom;\n        selectionData.offsetTo = offsetTo;\n\n        selectionData.startString = startString;\n        selectionData.middleString = middleString;\n        selectionData.endString = endString;\n\n        return selectionData\n    }\n\n\n\n}","export class NodeHelper {\n\n    public static getListOfBlockTags(): string[] {\n        return ['div', 'p', 'ul'];\n    }\n\n    public static isInlineTag(tag: string): boolean {\n\n        let blockTags = NodeHelper.getListOfBlockTags();\n\n        if (blockTags.indexOf(tag) == -1) {\n            return true;\n        }\n\n        return false;\n\n    }\n\n    public static findParentByLocalName(node: Node, tag: string): Element {\n\n        if (NodeHelper.isInlineTag(node.parentElement.localName)) {\n\n            if (node.parentElement.localName == tag) {\n                return node.parentElement;\n            } else {\n                return NodeHelper.findParentByLocalName(node.parentElement, tag);\n            }\n\n        } else {\n            return undefined;\n        }\n\n    }\n\n    public static findParentByClassName(node: Node, className: string): Element {\n\n        if (NodeHelper.isInlineTag(node.parentElement.localName)) {\n\n            if (node.parentElement.classList.contains(className)) {\n                return node.parentElement;\n            } else {\n                return NodeHelper.findParentByClassName(node.parentElement, className);\n            }\n\n        } else {\n            return undefined;\n        }\n\n    }\n\n    public static findParentByLocalNameAndClassName(node: Node, tag: string, className: string): Element {\n\n        if (NodeHelper.isInlineTag(node.parentElement.localName)) {\n\n            if (node.parentElement.classList.contains(className) && node.parentElement.localName == tag) {\n                return node.parentElement;\n            } else {\n                return NodeHelper.findParentByClassName(node.parentElement, className);\n            }\n\n        } else {\n            return undefined;\n        }\n\n    }\n\n    public static haveParentWithLocalName(node: Node, tag: string): boolean {\n\n        let parentElement: Element = NodeHelper.findParentByLocalName(node, tag);\n\n        return !!parentElement;\n\n    }\n\n    public static haveParentWithClassName(node: Node, className: string): boolean {\n\n        let parentElement: Element = NodeHelper.findParentByClassName(node, className);\n\n        return !!parentElement;\n\n    }\n\n    public static haveParentWithLocalNameAndClassName(node: Node, tag: string, className: string): boolean {\n\n        let parentElement: Element = NodeHelper.findParentByLocalNameAndClassName(node, tag, className);\n\n        return !!parentElement;\n\n    }\n\n    public static findBlockParent(element: Element): Element {\n\n        if (element.parentElement.localName == 'p' || element.parentElement.localName == 'div' || element.parentElement.localName == 'li') {\n            return element.parentElement;\n        } else {\n            return NodeHelper.findBlockParent(element.parentElement);\n        }\n\n    }\n\n    public static unwrapElements(elements: any, tag: string, startOffset: number, endOffset: number): Element[] {\n\n        let currentLength: number = 0;\n\n        console.log('Action: unwrapElements');\n\n        console.log('endOffset: ' + startOffset);\n        console.log('endOffset: ' + endOffset);\n        console.log('elements.length: ' + elements.length);\n\n        for (let i: number = 0; i < elements.length; i = i + 1) {\n\n            currentLength = currentLength + elements[i].textContent.length;\n\n            console.log('Index: ' + i);\n            console.log('Current length: ' + currentLength);\n\n            if (elements[i].hasOwnProperty('localName')) {\n\n                if (elements[i].localName == tag) {\n\n                    if (currentLength >= startOffset) {\n\n                        if (currentLength - endOffset <= elements[i].textContent.length) {\n\n                            let inElementEndOffset = currentLength - endOffset;\n\n                            if (inElementEndOffset == elements[i].textContent.length) {\n                                elements[i].outerHTML = elements[i].innerHTML;\n                            } else {\n\n                            }\n\n\n                        }\n\n                    }\n\n\n                }\n\n            }\n\n\n        }\n\n        return elements;\n\n    };\n\n\n    public static wrapElements(elements: any, tag: string, startOffset: number, endOffset: number): void {\n\n        let element: Element = document.createElement(tag);\n\n        let currentLength: number = 0;\n        let elementInnerHTML: string = '';\n\n        let insertionIndex: number;\n\n        console.log('Action: wrapElements');\n\n        console.log('endOffset: ' + startOffset);\n        console.log('endOffset: ' + endOffset);\n        console.log('elements.length: ' + elements.length);\n\n\n        for (let i: number = 0; i < elements.length; i = i + 1) {\n\n            currentLength = currentLength + elements[i].textContent.length;\n\n            // if we find start element/node BLOCK START\n\n            console.log('Index: ' + i);\n            console.log('Current length: ' + currentLength);\n\n            if (currentLength - startOffset >= 0) {\n\n                console.log('Node at start offset have been found, index: ' + i);\n\n                if (currentLength - startOffset <= elements[i].textContent.length) {\n\n                    elementInnerHTML = elementInnerHTML + elements[i].textContent.slice(startOffset, endOffset);\n                    let secondPartText: string = elements[i].textContent.slice(endOffset, elements[i].textContent.length);\n                    elements[i].textContent = elements[i].textContent.slice(0, startOffset);\n\n\n                    if (secondPartText.length > 0) {\n                        insertionIndex = i;\n\n                        let secondPartNode: Node = document.createTextNode(secondPartText);\n\n                        if (i == elements.length - 1) {\n                            elements[i].parentNode.appendChild(secondPartNode)\n                        } else {\n                            elements[i].parentNode.insertBefore(secondPartNode, elements[i + 1]);\n                        }\n                    }\n\n                }\n\n                // if we find start element/node BLOCK END\n\n            } else {\n\n                console.log('Node at end offset have been found, index: ' + i);\n\n                // if we find end element/node BLOCK START\n\n                if (currentLength > endOffset) {\n\n                    if (endOffset - currentLength < elements[i].textContent.length) {\n\n                        let localElementOffset: number = endOffset - currentLength;\n\n                        insertionIndex = i;\n\n                        elementInnerHTML = elementInnerHTML + elements[i].textContent.slice(0, localElementOffset);\n                        elements[i].textContent = elements[i].textContent.slice(localElementOffset);\n\n                    }\n                }\n\n                // if we find end element/node BLOCK END\n\n                else {\n\n                    console.log('Wrapping regular node at index: ' + i);\n\n                    // add textContent or outerHTML to elementInnerHTML BLOCK START\n\n                    if (elements[i].hasOwnProperty('outerHTML')) {\n                        elementInnerHTML = elementInnerHTML + elements[i].outerHTML;\n                    } else {\n                        elementInnerHTML = elementInnerHTML + elements[i].textContent;\n                    }\n\n                    // add textContent or innerHTML to elementInnerHTML BLOCK END\n\n                }\n\n            }\n\n        }\n\n        console.log('elementInnerHTML', elementInnerHTML);\n\n        element.innerHTML = elementInnerHTML;\n\n        if (insertionIndex == elements.length - 1) {\n            elements[0].parentNode.appendChild(element);\n        } else {\n            elements[0].parentNode.insertBefore(element, elements[0].parentNode.childNodes[insertionIndex + 1]);\n        }\n\n\n    }\n\n}","import {Component,EventEmitter} from '@angular/core';\nimport {Input, Output} from '@angular/core';\nimport {IEditorButton} from '../interfaces/IEditorButton';\nimport {SelectionHelper} from '../../helpers/selection.helper';\nimport {SelectionData} from '../../models/selectionData';\nimport {NodeHelper} from '../../helpers/node.helper';\n\n@Component({\n    selector: 'b-editor-button',\n    templateUrl: 'b.component.html'\n})\n\nexport class BComponent implements IEditorButton {\n\n    @Output('contenteditableModelChange') update = new EventEmitter();\n\n    @Input('content')\n    public content: string;\n\n    @Input('editorId')\n    public editorId: string;\n\n    wrapSelected(): void {\n\n        document.execCommand('bold', false, null);\n\n        //let selection = window.getSelection();\n        //let node: any = selection.focusNode;\n        //let selectionData: SelectionData = SelectionHelper.getSelectionData();\n        //\n        //if (document.getElementById(this.editorId).contains(node)) {\n        //\n        //    if(NodeHelper.haveParentWithLocalName(node, 'b')) {\n        //\n        //        let parent = NodeHelper.findParentByLocalName(node, 'b');\n        //        parent.outerHTML = parent.innerHTML;\n        //\n        //    }  else {\n        //        node.parentNode.innerHTML = selectionData.startString + '<b>' + selectionData.middleString + '</b>' + selectionData.endString;\n        //    }\n        //\n        //\n        //    this.update.emit()\n        //}\n\n\n    }\n\n}","import {Component, EventEmitter} from '@angular/core';\nimport {Input, Output} from '@angular/core';\nimport {IEditorButton} from '../interfaces/IEditorButton';\nimport {SelectionHelper} from '../../helpers/selection.helper';\nimport {SelectionData} from '../../models/selectionData';\nimport {NodeHelper} from \"../../helpers/node.helper\";\n\n@Component({\n    selector: 'i-editor-button',\n    templateUrl: 'i.component.html'\n})\n\nexport class IComponent implements IEditorButton {\n\n    @Output('contenteditableModelChange') update = new EventEmitter();\n\n    @Input('content')\n    public content: string;\n\n    @Input('editorId')\n    public editorId: string;\n\n    wrapSelected(): void {\n\n        document.execCommand('italic', false, null);\n\n        //let selection = window.getSelection();\n        //let node: any = selection.focusNode;\n        //let selectionData: SelectionData = SelectionHelper.getSelectionData();\n        //\n        //if (document.getElementById(this.editorId).contains(node)) {\n        //\n        //    if(NodeHelper.haveParentWithLocalName(node, 'i')) {\n        //\n        //        let parent = NodeHelper.findParentByLocalName(node, 'i');\n        //        parent.outerHTML = parent.innerHTML;\n        //\n        //    }  else {\n        //        node.parentNode.innerHTML = selectionData.startString + '<i>' + selectionData.middleString + '</i>' + selectionData.endString;\n        //    }\n        //    this.update.emit();\n        //\n        //}\n\n    }\n\n}","import {Component, EventEmitter} from '@angular/core';\nimport {Input, Output} from '@angular/core';\n\nimport {IEditorButton} from '../interfaces/IEditorButton';\n\nimport {SelectionData} from '../../models/selectionData';\nimport {SelectionHelper} from '../../helpers/selection.helper';\nimport {NodeHelper} from \"../../helpers/node.helper\";\n\n@Component({\n    selector: 'u-editor-button',\n    templateUrl: 'u.component.html'\n})\n\nexport class UComponent implements IEditorButton {\n\n    @Output('contenteditableModelChange') update = new EventEmitter();\n\n    @Input('content')\n    public content: string;\n\n    @Input('editorId')\n    public editorId: string;\n\n    wrapSelected(): void {\n\n        document.execCommand('underline', false, null);\n\n        //let selection = window.getSelection();\n        //let node: any = selection.focusNode;\n        //let selectionData: SelectionData = SelectionHelper.getSelectionData();\n        //\n        //if (document.getElementById(this.editorId).contains(node)) {\n        //\n        //    if(NodeHelper.haveParentWithLocalNameAndClassName(node, 'span', 'e-style-underline')) {\n        //\n        //        let parent = NodeHelper.findParentByLocalNameAndClassName(node, 'span', 'e-style-underline');\n        //        parent.outerHTML = parent.innerHTML;\n        //\n        //    } else {\n        //        node.parentNode.innerHTML = selectionData.startString + '<span class=\"e-style-underline\">' + selectionData.middleString + '</span>' + selectionData.endString;\n        //    }\n        //    this.update.emit();\n        //}\n\n    }\n\n}","import {Component, EventEmitter} from '@angular/core';\nimport {Input, Output} from '@angular/core';\nimport {IEditorButton} from '../interfaces/IEditorButton';\nimport {SelectionData} from '../../models/selectionData';\nimport {SelectionHelper} from '../../helpers/selection.helper';\n\n@Component({\n    selector: 'text-center-editor-button',\n    templateUrl: 'text-center.component.html'\n})\n\nexport class TextCenterComponent implements IEditorButton {\n\n    @Output('contenteditableModelChange') update = new EventEmitter();\n\n    @Input('content')\n    public content:string;\n\n    @Input('editorId')\n    public editorId:string;\n\n    wrapSelected():void {\n\n        document.execCommand('justifyCenter', false, null);\n\n        //let selection = window.getSelection();\n        //let node:any = selection.focusNode;\n        //\n        //if (document.getElementById(this.editorId).contains(node)) {\n        //    if (node.parentNode.classList.contains('e-style-text-center')) {\n        //        node.parentNode.classList.remove('e-style-text-center');\n        //    } else {\n        //        node.parentNode.classList.remove('e-style-text-left');\n        //        node.parentNode.classList.remove('e-style-text-right');\n        //        node.parentNode.classList.add('e-style-text-center');\n        //    }\n        //}\n\n    }\n\n\n}","import {Component, EventEmitter} from '@angular/core';\nimport {Input, Output} from '@angular/core';\nimport {IEditorButton} from '../interfaces/IEditorButton';\nimport {SelectionData} from '../../models/selectionData';\nimport {SelectionHelper} from '../../helpers/selection.helper';\n\n@Component({\n    selector: 'text-right-editor-button',\n    templateUrl: 'text-right.component.html'\n})\n\nexport class TextRightComponent implements IEditorButton {\n\n    @Output('contenteditableModelChange') update = new EventEmitter();\n\n    @Input('content')\n    public content:string;\n\n    @Input('editorId')\n    public editorId:string;\n\n    wrapSelected():void {\n\n        document.execCommand('justifyRight', false, null);\n\n        //let selection = window.getSelection();\n        //let node:any = selection.focusNode;\n        //\n        //if (document.getElementById(this.editorId).contains(node)) {\n        //\n        //    if (node.parentNode.classList.contains('e-style-text-right')) {\n        //        node.parentNode.classList.remove('e-style-text-right');\n        //    } else {\n        //        node.parentNode.classList.remove('e-style-text-center');\n        //        node.parentNode.classList.remove('e-style-text-left');\n        //        node.parentNode.classList.add('e-style-text-right');\n        //    }\n        //\n        //}\n\n    }\n\n\n}","import {Component, EventEmitter} from '@angular/core';\nimport {Input, Output} from '@angular/core';\nimport {IEditorButton} from \"../interfaces/IEditorButton\";\n\n@Component({\n    selector: 'text-left-editor-button',\n    templateUrl: 'text-left.component.html'\n})\n\nexport class TextLeftComponent implements IEditorButton {\n\n    @Output('contenteditableModelChange') update = new EventEmitter();\n\n    @Input('content')\n    public content:string;\n\n    @Input('editorId')\n    public editorId:string;\n\n    wrapSelected():void {\n\n        document.execCommand('justifyLeft', false, null);\n\n        //let selection = window.getSelection();\n        //let node:any = selection.focusNode;\n        //\n        //if (document.getElementById(this.editorId).contains(node)) {\n        //\n        //    if (node.parentNode.classList.contains('e-style-text-left')) {\n        //        node.parentNode.classList.remove('e-style-text-left');\n        //    } else {\n        //        node.parentNode.classList.remove('e-style-text-center');\n        //        node.parentNode.classList.remove('e-style-text-right');\n        //        node.parentNode.classList.add('e-style-text-left');\n        //    }\n        //\n        //}\n\n    }\n\n}","import {Component, EventEmitter} from '@angular/core';\nimport {Input, Output} from '@angular/core';\nimport {IEditorButton} from '../interfaces/IEditorButton';\n\n@Component({\n    selector: 'ul-editor-button',\n    templateUrl: 'ul.component.html'\n})\n\nexport class UlComponent implements IEditorButton {\n\n    @Output('contenteditableModelChange') update = new EventEmitter();\n\n    @Input('content')\n    public content:string;\n\n    @Input('editorId')\n    public editorId:string;\n\n    wrapSelected():void {\n\n        document.execCommand('insertUnorderedList', false, null);\n    }\n\n}","import {Component, EventEmitter} from '@angular/core';\nimport {Input, Output} from '@angular/core';\nimport {IEditorButton} from '../interfaces/IEditorButton';\nimport {SelectionHelper} from '../../helpers/selection.helper';\nimport {NodeHelper} from '../../helpers/node.helper';\n\n@Component({\n    selector: 'ol-editor-button',\n    templateUrl: 'ol.component.html'\n})\n\nexport class OlComponent implements IEditorButton {\n\n    @Output('contenteditableModelChange') update = new EventEmitter();\n\n    @Input('content')\n    public content:string;\n\n    @Input('editorId')\n    public editorId:string;\n\n\n    //private getNodeIndex(elements:HTMLCollection, node:Node):number {\n    //\n    //    let index:number;\n    //\n    //    for (let i:number = 0; i < elements.length; i = i + 1) {\n    //        if (elements[i].contains(node)) {\n    //            index = i;\n    //        }\n    //    }\n    //\n    //    return index;\n    //\n    //}\n    //\n    //private getElementsToWrap(elements:any, startIndex:number, endIndex:number):Element[] {\n    //\n    //    let result:Element[] = [];\n    //\n    //    console.log('elements', elements);\n    //\n    //    for (let i:number = startIndex; i <= endIndex; i = i + 1) {\n    //\n    //        result.push(elements[i]);\n    //\n    //    }\n    //\n    //\n    //    return result;\n    //\n    //}\n\n    wrapSelected():void {\n\n        document.execCommand('insertOrderedList', false, null);\n\n        //let selection = window.getSelection();\n        //let node:any = selection.focusNode;\n        //\n        //console.log('selection', selection);\n        //\n        //console.log('selection.extentOffset', selection.extentOffset);\n        //console.log('selection.anchorOffset', selection.anchorOffset);\n        //console.log('node.parentNode.innerText.length', node.parentNode.innerText.length);\n        //\n        //if (document.getElementById(this.editorId).contains(node)) {\n        //\n        //    //node.parentNode.innerHTML = '<ul><li>'+nod+'</li></ul>';\n        //\n        //\n        //    let startNode = selection.extentNode;\n        //    let endNode = selection.anchorNode;\n        //\n        //    let startParent = NodeHelper.findBlockParent(startNode.parentElement);\n        //    let endParent = NodeHelper.findBlockParent(endNode.parentElement);\n        //\n        //    if (startParent == endParent) {\n        //\n        //        let startIndex:number = this.getNodeIndex(startParent.children, startNode);\n        //        let endIndex:number = this.getNodeIndex(startParent.children, startNode);\n        //\n        //        console.log('startIndex', startIndex);\n        //        console.log('endIndex', endIndex);\n        //\n        //        let elementsToWrap:Element[] = this.getElementsToWrap(startParent.children, startIndex, endIndex);\n        //\n        //        let ol:Element = document.createElement('OL');\n        //\n        //        for (let i:number = 0; i < elementsToWrap.length; i = i + 1) {\n        //            elementsToWrap[i].outerHTML = '<li>' + startParent.children[i].outerHTML + '</li>';\n        //            console.log('startParent.children[i].outerHTML', startParent.children[i].outerHTML);\n        //            ol.appendChild(elementsToWrap[i]);\n        //        }\n        //\n        //        for(let i:number = startIndex; i <= endIndex; i = i + 1) {\n        //            startParent.children[i].remove();\n        //        }\n        //\n        //        startParent.insertBefore(ol,startParent.children[startIndex + 1]);\n        //\n        //        console.log('startParent', startParent);\n        //\n        //        this.update.emit();\n        //\n        //    }\n        //}\n\n    }\n\n}","import {Component, EventEmitter} from '@angular/core';\nimport {Input, Output} from '@angular/core';\nimport {IEditorButton} from \"../interfaces/IEditorButton\";\n\n@Component({\n    selector: 'text-justify-editor-button',\n    templateUrl: 'text-justify.component.html'\n})\n\nexport class TextJustifyComponent implements IEditorButton {\n\n    @Output('contenteditableModelChange') update = new EventEmitter();\n\n    @Input('content')\n    public content:string;\n\n    @Input('editorId')\n    public editorId:string;\n\n    wrapSelected():void {\n\n        document.execCommand('justifyFull', false, null);\n\n    }\n\n}","import {Component, EventEmitter} from '@angular/core';\nimport {Input, Output} from '@angular/core';\nimport {IEditorButton} from \"../interfaces/IEditorButton\";\n\n@Component({\n    selector: 'indent-editor-button',\n    templateUrl: 'indent.component.html'\n})\n\nexport class IndentComponent implements IEditorButton {\n\n    @Output('contenteditableModelChange') update = new EventEmitter();\n\n    @Input('content')\n    public content:string;\n\n    @Input('editorId')\n    public editorId:string;\n\n    wrapSelected():void {\n\n        document.execCommand('indent', false, null);\n\n    }\n\n}","import {Component, EventEmitter} from '@angular/core';\nimport {Input, Output} from '@angular/core';\nimport {IEditorButton} from \"../interfaces/IEditorButton\";\n\n@Component({\n    selector: 'outdent-editor-button',\n    templateUrl: 'outdent.component.html'\n})\n\nexport class OutdentComponent implements IEditorButton {\n\n    @Output('contenteditableModelChange') update = new EventEmitter();\n\n    @Input('content')\n    public content:string;\n\n    @Input('editorId')\n    public editorId:string;\n\n    wrapSelected():void {\n\n        document.execCommand('outdent', false, null);\n\n    }\n\n}","import {Component, EventEmitter} from '@angular/core';\nimport {Input, Output} from '@angular/core';\nimport {IEditorButton} from \"../interfaces/IEditorButton\";\n\n@Component({\n    selector: 'strike-editor-button',\n    templateUrl: 'strike.component.html'\n})\n\nexport class StrikeComponent implements IEditorButton {\n\n    @Output('contenteditableModelChange') update = new EventEmitter();\n\n    @Input('content')\n    public content:string;\n\n    @Input('editorId')\n    public editorId:string;\n\n    wrapSelected():void {\n\n        document.execCommand('strikeThrough', false, null);\n\n    }\n\n}","import {Component, EventEmitter} from '@angular/core';\nimport {Input, Output} from '@angular/core';\nimport {IEditorButton} from \"../interfaces/IEditorButton\";\n\n@Component({\n    selector: 'subscript-editor-button',\n    templateUrl: 'subscript.component.html'\n})\n\nexport class SubscriptComponent implements IEditorButton {\n\n    @Output('contenteditableModelChange') update = new EventEmitter();\n\n    @Input('content')\n    public content:string;\n\n    @Input('editorId')\n    public editorId:string;\n\n    wrapSelected():void {\n\n        document.execCommand('subscript', false, null);\n\n    }\n\n}","import {Component, EventEmitter} from '@angular/core';\nimport {Input, Output} from '@angular/core';\nimport {IEditorButton} from \"../interfaces/IEditorButton\";\n\n@Component({\n    selector: 'superscript-editor-button',\n    templateUrl: 'superscript.component.html'\n})\n\nexport class SuperscriptComponent implements IEditorButton {\n\n    @Output('contenteditableModelChange') update = new EventEmitter();\n\n    @Input('content')\n    public content:string;\n\n    @Input('editorId')\n    public editorId:string;\n\n    wrapSelected():void {\n\n        document.execCommand('superscript', false, null);\n\n    }\n\n}","import {Component, EventEmitter} from '@angular/core';\nimport {Input, Output} from '@angular/core';\nimport {IEditorButton} from \"../interfaces/IEditorButton\";\n\n@Component({\n    selector: 'hr-editor-button',\n    templateUrl: 'hr.component.html'\n})\n\nexport class HrComponent implements IEditorButton {\n\n    @Output('contenteditableModelChange') update = new EventEmitter();\n\n    @Input('content')\n    public content:string;\n\n    @Input('editorId')\n    public editorId:string;\n\n    wrapSelected():void {\n\n        document.execCommand('insertHorizontalRule', false, null);\n\n    }\n\n}","import {Component, EventEmitter} from '@angular/core';\nimport {Input, Output} from '@angular/core';\nimport {IEditorButton} from \"../interfaces/IEditorButton\";\n\n@Component({\n    selector: 'format-block-editor-button',\n    templateUrl: 'format-block.component.html'\n})\n\nexport class FormatBlockComponent implements IEditorButton {\n\n    @Output('contenteditableModelChange') update = new EventEmitter();\n\n    @Input('content')\n    public content:string;\n\n    @Input('editorId')\n    public editorId:string;\n\n    public formatBlock:string;\n\n    wrapSelected():void {\n\n        document.execCommand('formatBlock', false, this.formatBlock);\n\n    }\n\n}","import {Component, EventEmitter} from '@angular/core';\nimport {Input, Output} from '@angular/core';\nimport {IEditorButton} from \"../interfaces/IEditorButton\";\n\n@Component({\n    selector: 'rf-editor-button',\n    templateUrl: 'rf.component.html'\n})\n\nexport class RemoveFormatComponent implements IEditorButton {\n\n    @Output('contenteditableModelChange') update = new EventEmitter();\n\n    @Input('content')\n    public content:string;\n\n    @Input('editorId')\n    public editorId:string;\n\n    wrapSelected():void {\n\n        document.execCommand('removeFormat', false, null);\n\n    }\n\n}","import {Component, EventEmitter} from '@angular/core';\nimport {Input, Output} from '@angular/core';\nimport {IEditorButton} from \"../interfaces/IEditorButton\";\n\n@Component({\n    selector: 'font-size-editor-button',\n    templateUrl: 'font-size.component.html'\n})\n\nexport class FontSizeComponent implements IEditorButton {\n\n    @Output('contenteditableModelChange') update = new EventEmitter();\n\n    @Input('content')\n    public content:string;\n\n    @Input('editorId')\n    public editorId:string;\n\n    wrapSelected():void {\n\n        document.execCommand('fontSize', false, 14);\n\n    }\n\n}","import {Component, EventEmitter} from '@angular/core';\nimport {Input, Output} from '@angular/core';\nimport {IEditorButton} from \"../interfaces/IEditorButton\";\n\n@Component({\n    selector: 'font-name-editor-button',\n    templateUrl: 'font-name.component.html'\n})\n\nexport class FontNameComponent implements IEditorButton {\n\n    @Output('contenteditableModelChange') update = new EventEmitter();\n\n    @Input('content')\n    public content:string;\n\n    @Input('editorId')\n    public editorId:string;\n\n    wrapSelected():void {\n\n        document.execCommand('fontName', false, 'Arial');\n\n    }\n\n}","import {Component, EventEmitter} from '@angular/core';\nimport {Input, Output} from '@angular/core';\nimport {IEditorButton} from \"../interfaces/IEditorButton\";\n\n@Component({\n    selector: 'create-link-editor-button',\n    templateUrl: 'create-link.component.html'\n})\n\nexport class CreateLinkComponent implements IEditorButton {\n\n    @Output('contenteditableModelChange') update = new EventEmitter();\n\n    @Input('content')\n    public content:string;\n\n    @Input('editorId')\n    public editorId:string;\n\n    wrapSelected():void {\n\n\n        let url:string = prompt('Enter the link here: ', 'http:\\/\\/');\n        document.execCommand('createlink', false, url);\n\n    }\n\n}","import {Component, EventEmitter} from '@angular/core';\nimport {Input, Output} from '@angular/core';\nimport {IEditorButton} from \"../interfaces/IEditorButton\";\n\n@Component({\n    selector: 'unlink-editor-button',\n    templateUrl: 'unlink.component.html'\n})\n\nexport class UnlinkComponent implements IEditorButton {\n\n    @Output('contenteditableModelChange') update = new EventEmitter();\n\n    @Input('content')\n    public content:string;\n\n    @Input('editorId')\n    public editorId:string;\n\n    wrapSelected():void {\n\n        document.execCommand('unlink', false, null);\n\n    }\n\n}","import {Component, EventEmitter} from '@angular/core';\nimport {Input, Output} from '@angular/core';\nimport {IEditorButton} from \"../interfaces/IEditorButton\";\n\n@Component({\n    selector: 'insert-image-editor-button',\n    templateUrl: 'insert-image.component.html'\n})\n\nexport class InsertImageComponent implements IEditorButton {\n\n    @Output('contenteditableModelChange') update = new EventEmitter();\n\n    @Input('content')\n    public content:string;\n\n    @Input('editorId')\n    public editorId:string;\n\n    wrapSelected():void {\n\n\n        let url:string = prompt('Enter the link here: ', 'http:\\/\\/');\n        document.execCommand('insertimage', false, url);\n\n    }\n\n}","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms'\n\nimport { BComponent } from './components/b-component/b.component';\nimport { IComponent } from './components/i-component/i.component';\nimport { UComponent } from './components/u-component/u.component';\nimport {TextCenterComponent} from './components/text-center-component/text-center.component';\nimport {TextRightComponent} from './components/text-right-component/text-right.component';\nimport {TextLeftComponent} from './components/text-left-component/text-left.component';\nimport {UlComponent} from './components/ul-component/ul.component';\nimport {OlComponent} from './components/ol-component/ol.component';\nimport {TextJustifyComponent} from './components/text-justify-component/text-justify.component';\nimport {IndentComponent} from './components/indent-component/indent.component';\nimport {OutdentComponent} from './components/outdent-component/outdent.component';\nimport {StrikeComponent} from './components/strike-component/strike.component';\nimport {SubscriptComponent} from './components/subscript-component/subscript.component';\nimport {SuperscriptComponent} from './components/superscript-component/superscript.component';\nimport {HrComponent} from './components/hr-component/hr.component';\nimport {FormatBlockComponent} from './components/format-block-component/foramt-block.component';\nimport {RemoveFormatComponent} from './components/rf-component/rf.component';\nimport {FontSizeComponent} from './components/font-size-component/font-size.component';\nimport {FontNameComponent} from './components/font-name-component/font-name.component';\nimport {CreateLinkComponent} from './components/create-link-component/create-link.component';\nimport {UnlinkComponent} from './components/unlink-component/unlink.component';\nimport {InsertImageComponent} from './components/insert-image-component/insert-image.component';\n\n@NgModule({\n    declarations: [\n        BComponent,\n        IComponent,\n        UComponent,\n        StrikeComponent,\n\n        TextCenterComponent,\n        TextRightComponent,\n        TextLeftComponent,\n        TextJustifyComponent,\n\n        IndentComponent,\n        OutdentComponent,\n\n        OlComponent,\n        UlComponent,\n\n        SubscriptComponent,\n        SuperscriptComponent,\n\n        HrComponent,\n        RemoveFormatComponent,\n        FormatBlockComponent,\n        FontSizeComponent,\n        FontNameComponent,\n\n        CreateLinkComponent,\n        UnlinkComponent,\n\n        InsertImageComponent\n\n    ],\n    imports: [FormsModule],\n    exports: [\n        BComponent,\n        IComponent,\n        UComponent,\n        StrikeComponent,\n\n        TextCenterComponent,\n        TextRightComponent,\n        TextLeftComponent,\n        TextJustifyComponent,\n\n        IndentComponent,\n        OutdentComponent,\n\n        OlComponent,\n        UlComponent,\n\n        SubscriptComponent,\n        SuperscriptComponent,\n\n        HrComponent,\n        RemoveFormatComponent,\n        FormatBlockComponent,\n        FontSizeComponent,\n        FontNameComponent,\n\n        CreateLinkComponent,\n        UnlinkComponent,\n\n        InsertImageComponent\n    ],\n    bootstrap: []\n})\n\nexport class EditorFeaturesModule {\n\n    constructor() {\n        console.log('EditorFeaturesModule init');\n    }\n\n}","export class CookieService {\n\n    public static getCookie(name:string):string {\n        let cookieValue = null;\n        if (document.cookie && document.cookie != '') {\n            let cookies = document.cookie.split(';');\n            for (let i = 0; i < cookies.length; i++) {\n                let cookie = cookies[i].trim();\n                // Does this cookie string begin with the name we want?\n                if (cookie.substring(0, name.length + 1) == (name + '=')) {\n                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                    break;\n                }\n            }\n        }\n        return cookieValue;\n    }\n\n    public static setCookie(name:string, value:string, options:any):void {\n\n        //console.log('options', options);\n\n        options = options || {};\n\n        let expires = options.expires;\n\n        if (typeof expires == \"number\" && expires) {\n            let d = new Date();\n            d.setTime(expires);\n            expires = options.expires = d;\n        }\n        if (expires && expires.toUTCString) {\n            options.expires = expires.toUTCString();\n        }\n\n        value = encodeURIComponent(value);\n\n        let updatedCookie = name + \"=\" + value;\n\n        for (let propName in options) {\n            updatedCookie += \"; \" + propName;\n            let propValue = options[propName];\n            if (propValue !== true) {\n                updatedCookie += \"=\" + propValue;\n            }\n        }\n\n        document.cookie = updatedCookie;\n    };\n\n    public static deleteCookie(name:string):void {\n\n        CookieService.setCookie(name, \"\", {expires: -1})\n    }\n\n\n}","import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/Rx';\nimport {Http, Response, Headers, RequestOptions} from '@angular/http';\n\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\n\n@Injectable()\nexport class AuthRepository {\n\n    constructor(private http: Http) {\n\n        console.log('repository', this.http);\n\n    }\n\n    public login(username: string, password: string): Observable<Response> {\n\n        return this.http.post('backend/web/v1/auth/login', JSON.stringify({username, password}))\n            .map((res: Response) => res.json())\n            .catch((error: any) => Observable.throw(error.json().error || 'Server error'));\n\n    }\n\n    public signup(username: string, password: string, email: string): Observable<Response> {\n        return this.http.post('backend/web/v1/auth/signup', JSON.stringify({username, password, email}))\n            .map((res: Response) => res.json())\n            .catch((error: any) => Observable.throw(error.json().error || 'Server error'));\n    }\n\n    public logout(): void {\n\n        this.http.get('backend/web/v1/auth/logout');\n\n    }\n\n}","import {Injectable} from '@angular/core';\nimport {CookieService} from './cookie.service';\nimport {AuthRepository} from '../repositories/auth.repository';\n\n@Injectable()\nexport class AuthService {\n\n    constructor(private authRepository: AuthRepository) {\n\n    }\n\n    public isAuthorized(): boolean {\n\n        return !!CookieService.getCookie('token');\n\n    }\n\n    public login(username: string, password: string) {\n\n        return this.authRepository.login(username, password);\n\n    }\n\n    public signup(username: string, password: string, email: string){\n        return this.authRepository.signup(username, password, email);\n    }\n\n    public logout() {\n\n        CookieService.deleteCookie('token');\n\n        this.authRepository.logout();\n    }\n\n}","import { Component } from '@angular/core';\nimport { Router, NavigationStart, RouteConfigLoadEnd } from '@angular/router';\nimport { AuthService } from '../../services/auth.service'\n\nimport 'rxjs/add/operator/filter';\n\n@Component({\n    selector: 'shell',\n    templateUrl: 'shell.component.html',\n    providers: [AuthService]\n})\n\nexport class ShellComponent {\n\n    private authService: AuthService;\n\n    private currentState: string;\n\n    constructor(private router: Router, authService: AuthService) {\n        console.log('ShellComponent init');\n\n        this.authService = authService;\n\n        this.router.events\n            .filter((event: RouteConfigLoadEnd) => event instanceof NavigationStart)\n            .subscribe((event: NavigationStart) => {\n\n                this.currentState = event.url;\n\n                if (!this.authService.isAuthorized()) {\n                    if (event.url !== '/login' && event.url !== '/registration') {\n                        this.router.navigateByUrl('/login');\n                    }\n                } else {\n                    if (event.url == '/login' || event.url == '/registration') {\n                        this.router.navigateByUrl('/');\n                    }\n                }\n\n                console.log('event', event);\n\n            })\n\n    }\n\n    public isAuth(): boolean {\n\n        let result = true;\n\n        if (this.currentState != '/login' && this.currentState != '/registration') {\n            result = false;\n        }\n\n\n        return result;\n\n    }\n\n    public logout(): void {\n        this.authService.logout();\n        this.router.navigateByUrl('/login');\n    }\n\n}","import {Component} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {AuthService} from '../../services/auth.service';\n\n@Component({\n    selector: 'login-component',\n    templateUrl: 'login.component.html',\n    providers: [AuthService]\n})\n\nexport class LoginComponent {\n\n    public username:string;\n    public password:string;\n\n    constructor(private router: Router, private authService: AuthService){}\n\n    public auth():void {\n\n        this.authService.login(this.username, this.password).subscribe(response => {\n            this.router.navigateByUrl('/')\n        })\n\n    }\n\n}","import {Component} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {AuthService} from '../../services/auth.service';\n\n@Component({\n    selector: 'registration-component',\n    templateUrl: 'registration.component.html',\n    providers: [AuthService]\n})\n\nexport class RegistrationComponent {\n\n    public username:string;\n    public password:string;\n    public email:string;\n\n    constructor(private router: Router, private authService: AuthService){}\n\n    public signup():void {\n\n        this.authService.signup(this.username, this.password, this.email).subscribe(response => {\n            this.router.navigateByUrl('/');\n        })\n\n    }\n\n}","export interface IEntity {\n    id: number\n}","import {IEntity} from \"./interfaces/IEntity\";\n\nexport class Slide implements IEntity{\n    id: number;\n    created_at: string;\n    updated_at: string;\n    presentation_id: number;\n    content:string = ''\n}","import {Slide} from \"./Slide\";\nimport {IEntity} from \"./interfaces/IEntity\";\n\nexport class Presentation implements IEntity {\n\n    id: number;\n    name: string = '';\n    slides: Slide[]\n\n}","export interface IQueryParameter {\n    key: string,\n    value: string\n}","import {IEntity} from \"../../models/interfaces/IEntity\";\nimport {IQueryParameter} from \"../../models/interfaces/IQueryParameter\";\nimport {Observable} from \"rxjs/Observable\";\nexport interface IRepository {\n\n    //getList(parameters?: IQueryParameter[]): Observable<IEntity[]>;\n    //getByKey(key: number): Observable<IEntity>;\n    //update(key: number, item: IEntity): Observable<IEntity>;\n    //create(item: IEntity): Observable<IEntity>,\n    //deleteByKey(key: number): void\n\n    getList(parameters: IQueryParameter[], key1?: number): Observable<IEntity[]>;\n    getByKey(key1: number, key2?: number): Observable<IEntity>;\n    update(item: IEntity, key: number, key2?: number): Observable<IEntity>;\n    create(item: IEntity, key1?: number): Observable<IEntity>,\n    deleteByKey(key1: number, key2?: number): void\n\n}","import {IQueryParameter} from \"../models/interfaces/IQueryParameter\";\nexport class UrlHelper {\n\n    public static createQueryParamtersString(parameters: IQueryParameter[]) {\n\n        let parametersString = '?';\n\n        for(let i = 0; i < parameters.length; i = i + 1) {\n            if(i == parameters.length - 1){\n                parametersString = parametersString + parameters[i].key + '=' + parameters[i].key;\n            } else {\n                parametersString = parametersString + parameters[i].key + '=' + parameters[i].key + '&'\n            }\n        }\n\n        return parametersString;\n\n    }\n\n}","import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/Rx';\nimport {Http, Response, Headers, RequestOptions} from '@angular/http';\n\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\n\nimport {IRepository} from './interfaces/IRepository';\nimport {IEntity} from '../models/interfaces/IEntity';\nimport {UrlHelper} from '../helpers/url.helper';\nimport {IQueryParameter} from '../models/interfaces/IQueryParameter';\nimport {Presentation} from '../models/Presentation';\nimport {CookieService} from '../services/cookie.service';\n\n@Injectable()\nexport class PresentationRepository implements IRepository {\n\n\n    constructor(private http: Http) {\n    }\n\n    getList(parameters: IQueryParameter[]): Observable<Presentation[]> {\n\n        let headers = new Headers({ 'Content-Type': 'application/json', 'authorization': 'Bearer ' + CookieService.getCookie('token') });\n        let options = new RequestOptions({ headers: headers });\n\n        let parametersString: string = '';\n\n        if (parameters) {\n            parametersString = UrlHelper.createQueryParamtersString(parameters);\n        }\n\n        return this.http.get('backend/web/v1/presentations' + parametersString, options)\n            .map((res: Response) => res.json())\n            .catch((error: any) => Observable.throw(error.json().error || 'Server error'));\n    }\n\n    getByKey(presentationId: number): Observable<Presentation> {\n\n        let headers = new Headers({ 'Content-Type': 'application/json', 'authorization': 'Bearer ' + CookieService.getCookie('token') });\n        let options = new RequestOptions({ headers: headers });\n\n        return this.http.get('backend/web/v1/presentations/' + presentationId, options)\n            .map((res: Response) => res.json())\n            .catch((error: any) => Observable.throw(error.json().error || 'Server error'));\n    }\n\n    update(item: IEntity, presentationId: number): Observable<Presentation> {\n\n        let headers = new Headers({ 'Content-Type': 'application/json', 'authorization': 'Bearer ' + CookieService.getCookie('token') });\n        let options = new RequestOptions({ headers: headers });\n\n        return this.http.put('backend/web/v1/presentations/' + presentationId, JSON.stringify(item), options)\n            .map((res: Response) => res.json())\n            .catch((error: any) => Observable.throw(error.json().error || 'Server error'));\n    }\n\n    create(item: IEntity): Observable<Presentation> {\n\n        let headers = new Headers({ 'Content-Type': 'application/json', 'authorization': 'Bearer ' + CookieService.getCookie('token') });\n        let options = new RequestOptions({ headers: headers });\n\n        return this.http.post('backend/web/v1/presentations', JSON.stringify(item), options)\n            .map((res: Response) => res.json())\n            .catch((error: any) => Observable.throw(error.json().error || 'Server error'));\n    }\n\n    deleteByKey(presentationId: number): void {\n\n        let headers = new Headers({ 'Content-Type': 'application/json', 'authorization': 'Bearer ' + CookieService.getCookie('token') });\n        let options = new RequestOptions({ headers: headers });\n\n        this.http.delete('backend/web/v1/presentations/' + presentationId, options)\n            .map((res: Response) => res.json())\n            .catch((error: any) => Observable.throw(error.json().error || 'Server error'));\n    }\n\n}","import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/Rx';\nimport {PresentationRepository} from '../repositories/presentation.repository';\nimport {IQueryParameter} from '../models/interfaces/IQueryParameter';\nimport {IEntity} from '../models/interfaces/IEntity';\nimport {Presentation} from '../models/Presentation';\n\n@Injectable()\nexport class PresentationService {\n\n    constructor(private presentationRepository: PresentationRepository) {}\n\n    getList(parameters: IQueryParameter[]): Observable<Presentation[]> {\n\n        return this.presentationRepository.getList(parameters);\n    }\n\n    getByKey(presentationId: number): Observable<Presentation> {\n        return this.presentationRepository.getByKey(presentationId);\n    }\n\n    update(item: Presentation, presentationId: number): Observable<Presentation> {\n        return this.presentationRepository.update(item , presentationId);\n    }\n\n    create(item: IEntity): Observable<Presentation> {\n        return this.presentationRepository.create(item);\n    }\n\n    deleteByKey(presentationId: number): void {\n        this.presentationRepository.deleteByKey(presentationId);\n    }\n\n}","import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/Rx';\nimport {Http, Response, Headers, RequestOptions} from '@angular/http';\n\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\n\nimport {IRepository} from './interfaces/IRepository';\nimport {IEntity} from '../models/interfaces/IEntity';\nimport {IQueryParameter} from '../models/interfaces/IQueryParameter';\nimport {UrlHelper} from '../helpers/url.helper';\nimport {Slide} from '../models/Slide';\nimport {CookieService} from '../services/cookie.service';\n\n@Injectable()\nexport class SlideRepository implements IRepository {\n\n\n    constructor(private http: Http) {\n    }\n\n    getList(parameters: IQueryParameter[], presentationId: number): Observable<Slide[]> {\n\n        let headers = new Headers({ 'Content-Type': 'application/json', 'authorization': 'Bearer ' + CookieService.getCookie('token') });\n        let options = new RequestOptions({ headers: headers });\n\n        let parametersString: string = '';\n\n        if (parameters) {\n            parametersString = UrlHelper.createQueryParamtersString(parameters);\n        }\n\n        return this.http.get('backend/web/v1/presentations/' + presentationId + '/slides' + parametersString, options)\n            .map((res: Response) => res.json())\n            .catch((error: any) => Observable.throw(error.json().error || 'Server error'));\n    }\n\n    getByKey(presentationId: number, slideId: number): Observable<Slide> {\n\n        let headers = new Headers({ 'Content-Type': 'application/json', 'authorization': 'Bearer ' + CookieService.getCookie('token') });\n        let options = new RequestOptions({ headers: headers });\n\n        return this.http.get('backend/web/v1/presentations/' + presentationId + '/slides/' + slideId, options)\n            .map((res: Response) => res.json())\n            .catch((error: any) => Observable.throw(error.json().error || 'Server error'));\n    }\n\n    update(item: IEntity, presentationId: number, slideId: number): Observable<Slide> {\n\n        let headers = new Headers({ 'Content-Type': 'application/json', 'authorization': 'Bearer ' + CookieService.getCookie('token') });\n        let options = new RequestOptions({ headers: headers });\n\n        return this.http.put('backend/web/v1/presentations/' + presentationId + '/slides/' + slideId, JSON.stringify(item), options)\n            .map((res: Response) => res.json())\n            .catch((error: any) => Observable.throw(error.json().error || 'Server error'));\n    }\n\n    create(item: IEntity, presentationId: number): Observable<Slide> {\n\n        let headers = new Headers({ 'Content-Type': 'application/json', 'authorization': 'Bearer ' + CookieService.getCookie('token') });\n        let options = new RequestOptions({ headers: headers });\n\n        return this.http.post('backend/web/v1/presentations/' + presentationId + '/slides', JSON.stringify(item), options)\n            .map((res: Response) => res.json())\n            .catch((error: any) => Observable.throw(error.json().error || 'Server error'));\n    }\n\n    deleteByKey(presentationId: number, slidesId: number): void {\n\n        let headers = new Headers({ 'Content-Type': 'application/json', 'authorization': 'Bearer ' + CookieService.getCookie('token') });\n        let options = new RequestOptions({ headers: headers });\n\n        this.http.delete('backend/web/v1/presentations/' + presentationId + '/slides/' + slidesId, options)\n            .map((res: Response) => res.json())\n            .catch((error: any) => Observable.throw(error.json().error || 'Server error'));\n    }\n\n}","import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/Rx';\nimport {SlideRepository} from '../repositories/slide.repository';\nimport {IQueryParameter} from '../models/interfaces/IQueryParameter';\nimport {IEntity} from '../models/interfaces/IEntity';\nimport {Slide} from '../models/Slide';\n\n@Injectable()\nexport class SlideService {\n\n    constructor(private slideRepository: SlideRepository) {}\n\n    getList(parameters: IQueryParameter[], presentationId: number): Observable<Slide[]> {\n\n        return this.slideRepository.getList(parameters, presentationId);\n    }\n\n    getByKey(presentationId: number, slideId: number): Observable<Slide> {\n        return this.slideRepository.getByKey(presentationId, slideId);\n    }\n\n    update(item: Slide, presentationId: number, slideId: number): Observable<Slide> {\n        return this.slideRepository.update(item, presentationId, slideId);\n    }\n\n    create(item: IEntity, presentationId: number): Observable<Slide> {\n        return this.slideRepository.create(item, presentationId);\n    }\n\n    deleteByKey(presentationId: number, slideId: number): void {\n        this.slideRepository.deleteByKey(presentationId, slideId);\n    }\n\n}","import {Component} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {Presentation} from '../../models/Presentation';\n\nimport {PresentationService} from '../../services/presentation.service';\nimport {SlideService} from '../../services/slide.service';\nimport {IQueryParameter} from \"../../models/interfaces/IQueryParameter\";\nimport {Slide} from \"../../models/Slide\";\n\n@Component({\n    selector: 'dashboard',\n    templateUrl: 'dashboard.component.html',\n    providers: [PresentationService, SlideService]\n})\n\nexport class DashboardComponent {\n\n    presentations: Presentation[];\n\n    constructor(private router: Router, private presentationService: PresentationService, private slideService: SlideService) {\n\n        console.log('DashboardComponent init');\n\n        //this.presentations = [{id: 1, name: 'Компьютерная геометрия и графика', slides: []}, {id: 2, name: 'Веб-дизайн', slides: []}];\n\n        this.getList();\n\n    }\n\n    public getList(): void {\n\n        let queryParameters: IQueryParameter[] = [];\n\n        this.presentationService.getList(queryParameters).subscribe(presentations => {\n            this.presentations = presentations;\n        })\n    }\n\n    public addPresentation(): void {\n\n        console.log('add presentation');\n\n        this.presentationService.create(new Presentation()).subscribe(presentation => {\n\n            let slide = new Slide();\n\n            slide.presentation_id = presentation.id;\n\n            this.slideService.create(slide, presentation.id).subscribe(slide => {\n                this.router.navigateByUrl('/presentation/' + presentation.id + '/slides/' + slide.id);\n            })\n\n        })\n\n    }\n\n}","export class ControllerHelper {\n\n    public static check(readyStatus: ReadyStatus): boolean {\n\n        for (status in readyStatus) {\n            if (readyStatus.hasOwnProperty(status)) {\n                if (readyStatus[status] == false) {\n                    return false;\n                }\n            }\n        }\n        return true;\n\n    }\n\n}\n\nabstract class ReadyStatus {\n    // key: string = value\n}","import {Component} from '@angular/core';\nimport {Router, ActivatedRoute} from '@angular/router';\nimport {PresentationService} from \"../../services/presentation.service\";\nimport {Presentation} from \"../../models/Presentation\";\nimport {ControllerHelper} from \"../../helpers/controller.helper\";\n\n@Component({\n    selector: 'presentation',\n    templateUrl: 'presentation.component.html',\n    providers: [PresentationService]\n})\n\nexport class PresentationComponent {\n\n    private sub: any;\n    public presentationId: number;\n    public presentation: Presentation;\n    public readyStatus: ReadyStatus = new ReadyStatus();\n\n    constructor(private router: Router, private route: ActivatedRoute, private presentationService: PresentationService) {\n\n        console.log('PresentationComponent init');\n\n    }\n\n    ngOnInit() {\n        this.sub = this.route\n            .params\n            .subscribe(params => {\n                // Defaults to 0 if no query param provided.\n                console.log('params', params);\n                this.presentationId = +params['id'] || 0;\n\n                this.getPresentation();\n            });\n    }\n\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n\n    public checkReadyStatus(): boolean {\n        return ControllerHelper.check(this.readyStatus);\n    };\n\n    public getPresentation(): void {\n\n        this.readyStatus.content = false;\n\n        this.presentationService.getByKey(this.presentationId).subscribe(presentation => {\n\n            this.presentation = presentation;\n\n            this.readyStatus.content = true;\n        })\n\n    }\n\n    public updatePresentationName(): void {\n\n        this.presentationService.update(this.presentation, this.presentationId).subscribe(presentation => {\n            this.presentation = presentation;\n        })\n\n    }\n\n}\n\n\nclass ReadyStatus {\n    content: boolean = false;\n}\n","import { Component } from '@angular/core';\nimport {Router, ActivatedRoute} from '@angular/router';\n\nimport {Slide} from \"../../models/Slide\";\nimport {IQueryParameter} from \"../../models/interfaces/IQueryParameter\";\nimport {SlideService} from \"../../services/slide.service\";\nimport {ControllerHelper} from \"../../helpers/controller.helper\";\n\n@Component({\n    selector: 'slide-editor',\n    templateUrl: 'slide-editor.component.html',\n    providers: [SlideService]\n})\n\nexport class SlideEditorComponent {\n\n    slide: Slide = new Slide();\n\n    isVisualizer: boolean = true;\n    private sub: any;\n    editorId: string;\n    public presentationId: number;\n    public slideId: number;\n\n    public readyStatus: ReadyStatus = new ReadyStatus();\n\n    constructor(private router: Router, private route: ActivatedRoute, private slideService: SlideService) {\n        console.log('SlideEditorCompoennt init');\n\n        this.editorId = 'editor1';\n\n        //this.slide = new Slide();\n        //this.slide.content = '<div style=\"border-bottom: 2px solid #ccc; padding-bottom: 10px\"><div></div><ul style=\"padding-left: 40px\"><li>Item 1</li><li>Item 2</li><li>Item 3</li><li>Item 4</li></ul></div></div><p>'\n        //    + 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod'\n        //    + 'tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam'\n        //    + 'quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo '\n        //    + 'consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse '\n        //    + 'cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non '\n        //    + 'proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>';\n\n    }\n\n    public checkReadyStatus(): boolean {\n        return ControllerHelper.check(this.readyStatus);\n    };\n\n    public getSlide(): void {\n\n        this.readyStatus.content = false;\n\n        this.slideService.getByKey(this.presentationId, this.slideId).subscribe(slide => {\n\n            console.log('slide', slide);\n\n            this.readyStatus.content = true;\n\n            this.slide = slide;\n        })\n\n    }\n\n    public saveSlide(): void {\n\n        console.log('update');\n\n        this.slideService.update(this.slide, this.presentationId, this.slideId).subscribe(slide => {\n\n            console.log('updated');\n\n        })\n\n    }\n\n    ngOnInit() {\n        this.sub = this.route\n            .params\n            .subscribe(params => {\n                // Defaults to 0 if no query param provided.\n                console.log('params', params);\n                this.presentationId = +params['id'] || 0;\n                this.slideId = +params['slideId'] || 0;\n\n                if (this.slideId !== 0) {\n                    this.getSlide();\n                }\n            });\n    }\n\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n\n}\n\nclass ReadyStatus {\n    content: boolean = false;\n}\n","import {IEntity} from \"./interfaces/IEntity\";\nimport {Slide} from \"./Slide\";\n\nexport class SlideViewModel implements IEntity{\n    id: number;\n    created_at: string;\n    updated_at: string;\n    presentation_id: number;\n    content:string;\n\n    isActive: boolean = false;\n\n    constructor(slide: Slide){\n\n        this.id = slide.id;\n        this.created_at = slide.created_at;\n        this.updated_at = slide.updated_at;\n        this.presentation_id = slide.presentation_id;\n        this.content = slide.content;\n\n        this.isActive = false;\n\n    }\n}","import {Component} from '@angular/core';\nimport {Router, ActivatedRoute} from '@angular/router';\nimport {Slide} from \"../../models/Slide\";\nimport {IQueryParameter} from \"../../models/interfaces/IQueryParameter\";\nimport {SlideService} from \"../../services/slide.service\";\nimport {SlideViewModel} from \"../../models/SlideViewModel\";\nimport {ControllerHelper} from \"../../helpers/controller.helper\";\n\n@Component({\n    selector: 'slides-list',\n    templateUrl: 'slides-list.component.html',\n    providers: [SlideService]\n})\n\nexport class SlidesListComponent {\n\n    slides: SlideViewModel[];\n    private sub: any;\n    presentationId: number;\n    slideId: number;\n\n    readyStatus = new ReadyStatus();\n\n    constructor(private router: Router, private route: ActivatedRoute, private slideService: SlideService) {\n\n        console.log('Sliders tree');\n\n        //this.slides = [\n        //    {content: '<div style=\"border-bottom: 2px solid #ccc; padding-bottom: 10px\"><div></div><ul style=\"padding-left: 40px\"><li>Item 1</li><li>Item 2</li><li>Item 3</li><li>Item 4</li></ul></div></div><p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmodtempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniamquis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>'},\n        //    {content: '456'}\n        //]\n\n    }\n\n    ngOnInit() {\n        this.sub = this.route\n            .params\n            .subscribe(params => {\n                // Defaults to 0 if no query param provided.\n                console.log('params', params);\n                this.presentationId = +params['id'] || 0;\n                this.slideId = +params['slideId'] || 0;\n\n                this.getList();\n            });\n    }\n\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n\n    public getList(): void {\n\n        let queryParameters: IQueryParameter[] = [];\n\n        this.readyStatus.content = false;\n\n        this.slideService.getList(queryParameters, this.presentationId).subscribe(slides => {\n            this.slides = slides.map(function (slide) {\n                return new SlideViewModel(slide);\n            });\n\n            this.findActiveSlide();\n\n            this.readyStatus.content = true;\n        })\n    }\n\n    private findActiveSlide() {\n        this.slides.forEach( slide => {\n\n            if (slide.id == this.slideId) {\n                slide.isActive = true;\n            }\n\n        });\n    }\n\n    public checkReadyStatus(): boolean {\n        return ControllerHelper.check(this.readyStatus);\n    };\n\n    public addSlide(): void {\n\n        this.slideService.create(new Slide(), this.presentationId).subscribe(slide => {\n\n            console.log('updated');\n\n            this.getList();\n\n        });\n\n    }\n\n    public selectSlide(slide: SlideViewModel) {\n\n        console.log('select slide');\n\n        this.router.navigateByUrl('/presentation/' + this.presentationId + '/slides/' + slide.id);\n\n    }\n\n}\n\nclass ReadyStatus {\n    content: boolean = false;\n}\n","import {Directive, ElementRef, EventEmitter} from '@angular/core';\nimport {Input, Output} from '@angular/core';\nimport {OnChanges, SimpleChanges} from '@angular/core';\n\n@Directive({\n    selector: '[contenteditableModel]',\n    host: {\n        '(blur)': 'onEdit()',\n        '(keyup)': 'onEdit()'\n    }\n\n})\n\nexport class ContentEditableDirective implements OnChanges {\n    @Input('contenteditableModel') model:any;\n    @Output('contenteditableModelChange') update = new EventEmitter();\n\n    constructor(private elementRef:ElementRef) {\n\n    }\n\n\n    ngOnChanges(changes:SimpleChanges):void {\n\n        if (changes.model.firstChange == true) {\n            this.refreshView();\n        }\n\n    }\n\n    public onEdit() {\n\n        let value:string = this.elementRef.nativeElement.innerHTML;\n        this.update.emit(value);\n\n    }\n\n    public refreshView():void {\n\n        this.elementRef.nativeElement.innerHTML = this.model;\n    }\n\n}","import {ModuleWithProviders} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\n\nimport {DashboardComponent} from \"./components/dashboard-component/dashboard.component\";\nimport {LoginComponent} from \"./components/login-component/login.component\";\nimport {RegistrationComponent} from \"./components/registration-component/registration.component\";\nimport {PresentationComponent} from \"./components/presentation-component/presentation.component\";\n\nconst appRoutes: Routes = <Routes>[\n    {\n        path: '',\n        component: DashboardComponent,\n    },\n    {\n        path: 'login',\n        component: LoginComponent,\n    },\n    {\n        path: 'registration',\n        component: RegistrationComponent\n    },\n    {\n        path: 'presentation',\n        children: [\n            {\n                path: ':id',\n                component: PresentationComponent\n            },\n            {\n                path: ':id/slides/:slideId',\n                component: PresentationComponent\n            }]\n    },\n];\n\nexport const routing: ModuleWithProviders = RouterModule.forRoot(appRoutes);\n\n\n","import {NgModule} from '@angular/core';\nimport {HttpModule} from '@angular/http';\nimport {FormsModule} from '@angular/forms';\nimport {BrowserModule} from '@angular/platform-browser';\n\nimport {EditorFeaturesModule} from '../editor-features/editor-featrues.module'\n\nimport {ShellComponent} from './components/shell-component/shell.component';\n\nimport {LoginComponent} from './components/login-component/login.component';\nimport {RegistrationComponent} from './components/registration-component/registration.component';\n\nimport {DashboardComponent} from './components/dashboard-component/dashboard.component';\n\nimport {PresentationComponent} from './components/presentation-component/presentation.component';\nimport {SlideEditorComponent} from './components/slide-editor-component/slide-editor.component';\nimport {SlidesListComponent} from './components/slides-list-component/slides-list.component';\n\nimport {ContentEditableDirective } from './directives/content-editable.directive';\n\nimport {routing} from './app.routing';\nimport {AuthRepository} from './repositories/auth.repository';\nimport {AuthService} from './services/auth.service';\n\nimport {PresentationRepository} from './repositories/presentation.repository';\nimport {PresentationService} from './services/presentation.service';\n\nimport {SlideRepository} from './repositories/slide.repository';\nimport {SlideService} from './services/slide.service';\n\n@NgModule({\n    imports: [\n        BrowserModule,\n        HttpModule,\n        FormsModule,\n        routing,\n        EditorFeaturesModule\n    ],\n    declarations: [\n        ShellComponent,\n\n        LoginComponent,\n        RegistrationComponent,\n\n        DashboardComponent,\n        PresentationComponent,\n        SlideEditorComponent,\n        SlidesListComponent,\n\n        ContentEditableDirective\n    ],\n    providers: [\n        AuthRepository,\n        PresentationRepository,\n        SlideRepository\n    ],\n    bootstrap: [ShellComponent, []]\n})\n\nexport class AppModule {\n\n    constructor() {\n        console.log('AppModule init');\n    }\n\n}","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport {} from '@angular/core';\n\nimport { AppModule } from './app/app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);","import {Component,EventEmitter} from '@angular/core';\nimport {Input, Output} from '@angular/core';\nimport {IEditorButton} from '../interfaces/IEditorButton';\nimport {SelectionHelper} from '../../helpers/selection.helper';\nimport {SelectionData} from '../../models/selectionData';\nimport {NodeHelper} from '../../helpers/node.helper';\n\n@Component({\n    selector: 'b-editor-button',\n    templateUrl: 'b.component.html'\n})\n\nexport class BComponent implements IEditorButton {\n\n    @Output('contenteditableModelChange') update = new EventEmitter();\n\n    @Input('content')\n    public content: string;\n\n    @Input('editorId')\n    public editorId: string;\n\n    wrapSelected(): void {\n\n        let selection = window.getSelection();\n        let node: any = selection.focusNode;\n        let selectionData: SelectionData = SelectionHelper.getSelectionData();\n\n        if (document.getElementById(this.editorId).contains(node)) {\n\n            console.log({parentNode: node.parentNode});\n            console.log({node: node});\n\n            if (NodeHelper.haveParentWithLocalName(node, 'b')) {\n\n                let parent = NodeHelper.findParentByLocalName(node, 'b');\n                parent.outerHTML = parent.innerHTML;\n\n            } else {\n\n                let blockParent = NodeHelper.findBlockParent(node);\n\n                if (blockParent.childNodes.length > 1) {\n\n                    let currentLength = 0;\n                    let nodesToWrap: any[] = []; // Node or Element\n\n                    let startNodeIndex: number;\n                    let endNodeIndex: number;\n\n                    for (let i: number = 0; i < blockParent.childNodes.length; i = i + 1) {\n\n                        currentLength = currentLength + blockParent.childNodes[i].textContent.length;\n\n                        if (currentLength >= selectionData.offsetFrom) {\n\n                            if (!startNodeIndex) {\n                                startNodeIndex = i;\n                            }\n\n                            let lengthDiff: number = currentLength - selectionData.offsetTo;\n\n                            if (lengthDiff < blockParent.childNodes[i].textContent.length) {\n                                nodesToWrap.push(blockParent.childNodes[i]);\n                                //blockParent.removeChild(blockParent.childNodes[i]);\n                                endNodeIndex = i;\n                            }\n\n                        }\n\n                    }\n\n                    console.log('nodesToWrap', nodesToWrap);\n\n                    let b: Element = document.createElement('B');\n\n\n                    for (let i: number = 0; i < nodesToWrap.length; i = i + 1) {\n                        b.appendChild(nodesToWrap[i]);\n                    }\n\n                    console.log('B ELEMENT', b);\n\n                    //blockParent.insertBefore(b, blockParent.children[startNodeIndex + 1]); // next to start\n\n\n                } else {\n\n                    blockParent.innerHTML = selectionData.startString + '<b>' + selectionData.middleString + '</b>' + selectionData.endString;\n                }\n            }\n\n\n            this.update.emit()\n        }\n\n\n    }\n\n}"]}