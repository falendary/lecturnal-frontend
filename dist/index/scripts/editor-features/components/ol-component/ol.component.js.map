{"version":3,"sources":["editor-features/components/ol-component/ol.component.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAAsD;AACtD,sCAA4C;AAU5C,IAAa,WAAW;IALxB;QAO0C,WAAM,GAAG,IAAI,mBAAY,EAAE,CAAC;IAiGtE,CAAC;IAxFG,mEAAmE;IACnE,EAAE;IACF,uBAAuB;IACvB,EAAE;IACF,8DAA8D;IAC9D,2CAA2C;IAC3C,wBAAwB;IACxB,WAAW;IACX,OAAO;IACP,EAAE;IACF,mBAAmB;IACnB,EAAE;IACF,GAAG;IACH,EAAE;IACF,yFAAyF;IACzF,EAAE;IACF,gCAAgC;IAChC,EAAE;IACF,wCAAwC;IACxC,EAAE;IACF,iEAAiE;IACjE,EAAE;IACF,mCAAmC;IACnC,EAAE;IACF,OAAO;IACP,EAAE;IACF,EAAE;IACF,oBAAoB;IACpB,EAAE;IACF,GAAG;IAEH,kCAAY,GAAZ;QAEI,QAAQ,CAAC,WAAW,CAAC,mBAAmB,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;QAEvD,wCAAwC;QACxC,qCAAqC;QACrC,EAAE;QACF,sCAAsC;QACtC,EAAE;QACF,gEAAgE;QAChE,gEAAgE;QAChE,oFAAoF;QACpF,EAAE;QACF,8DAA8D;QAC9D,EAAE;QACF,gEAAgE;QAChE,EAAE;QACF,EAAE;QACF,2CAA2C;QAC3C,yCAAyC;QACzC,EAAE;QACF,4EAA4E;QAC5E,wEAAwE;QACxE,EAAE;QACF,qCAAqC;QACrC,EAAE;QACF,qFAAqF;QACrF,mFAAmF;QACnF,EAAE;QACF,gDAAgD;QAChD,4CAA4C;QAC5C,EAAE;QACF,4GAA4G;QAC5G,EAAE;QACF,wDAAwD;QACxD,EAAE;QACF,wEAAwE;QACxE,iGAAiG;QACjG,kGAAkG;QAClG,gDAAgD;QAChD,WAAW;QACX,EAAE;QACF,oEAAoE;QACpE,+CAA+C;QAC/C,WAAW;QACX,EAAE;QACF,4EAA4E;QAC5E,EAAE;QACF,kDAAkD;QAClD,EAAE;QACF,6BAA6B;QAC7B,EAAE;QACF,OAAO;QACP,GAAG;IAEP,CAAC;IAEL,kBAAC;AAAD,CAnGA,AAmGC,IAAA;AAjGyC;IAArC,aAAM,CAAC,4BAA4B,CAAC;;2CAA6B;AAGlE;IADC,YAAK,CAAC,SAAS,CAAC;;4CACK;AAGtB;IADC,YAAK,CAAC,UAAU,CAAC;;6CACK;AARd,WAAW;IALvB,gBAAS,CAAC;QACP,QAAQ,EAAE,kBAAkB;QAC5B,QAAQ,EAAE,mBAAmB;KAChC,CAAC;GAEW,WAAW,CAmGvB;AAnGY,kCAAW","file":"ol.component.js","sourcesContent":["import {Component, EventEmitter} from '@angular/core';\nimport {Input, Output} from '@angular/core';\nimport {IEditorButton} from '../interfaces/IEditorButton';\nimport {SelectionHelper} from '../../helpers/selection.helper';\nimport {NodeHelper} from '../../helpers/node.helper';\n\n@Component({\n    selector: 'ol-editor-button',\n    template: 'ol.component.html'\n})\n\nexport class OlComponent implements IEditorButton {\n\n    @Output('contenteditableModelChange') update = new EventEmitter();\n\n    @Input('content')\n    public content:string;\n\n    @Input('editorId')\n    public editorId:string;\n\n\n    //private getNodeIndex(elements:HTMLCollection, node:Node):number {\n    //\n    //    let index:number;\n    //\n    //    for (let i:number = 0; i < elements.length; i = i + 1) {\n    //        if (elements[i].contains(node)) {\n    //            index = i;\n    //        }\n    //    }\n    //\n    //    return index;\n    //\n    //}\n    //\n    //private getElementsToWrap(elements:any, startIndex:number, endIndex:number):Element[] {\n    //\n    //    let result:Element[] = [];\n    //\n    //    console.log('elements', elements);\n    //\n    //    for (let i:number = startIndex; i <= endIndex; i = i + 1) {\n    //\n    //        result.push(elements[i]);\n    //\n    //    }\n    //\n    //\n    //    return result;\n    //\n    //}\n\n    wrapSelected():void {\n\n        document.execCommand('insertOrderedList', false, null);\n\n        //let selection = window.getSelection();\n        //let node:any = selection.focusNode;\n        //\n        //console.log('selection', selection);\n        //\n        //console.log('selection.extentOffset', selection.extentOffset);\n        //console.log('selection.anchorOffset', selection.anchorOffset);\n        //console.log('node.parentNode.innerText.length', node.parentNode.innerText.length);\n        //\n        //if (document.getElementById(this.editorId).contains(node)) {\n        //\n        //    //node.parentNode.innerHTML = '<ul><li>'+nod+'</li></ul>';\n        //\n        //\n        //    let startNode = selection.extentNode;\n        //    let endNode = selection.anchorNode;\n        //\n        //    let startParent = NodeHelper.findBlockParent(startNode.parentElement);\n        //    let endParent = NodeHelper.findBlockParent(endNode.parentElement);\n        //\n        //    if (startParent == endParent) {\n        //\n        //        let startIndex:number = this.getNodeIndex(startParent.children, startNode);\n        //        let endIndex:number = this.getNodeIndex(startParent.children, startNode);\n        //\n        //        console.log('startIndex', startIndex);\n        //        console.log('endIndex', endIndex);\n        //\n        //        let elementsToWrap:Element[] = this.getElementsToWrap(startParent.children, startIndex, endIndex);\n        //\n        //        let ol:Element = document.createElement('OL');\n        //\n        //        for (let i:number = 0; i < elementsToWrap.length; i = i + 1) {\n        //            elementsToWrap[i].outerHTML = '<li>' + startParent.children[i].outerHTML + '</li>';\n        //            console.log('startParent.children[i].outerHTML', startParent.children[i].outerHTML);\n        //            ol.appendChild(elementsToWrap[i]);\n        //        }\n        //\n        //        for(let i:number = startIndex; i <= endIndex; i = i + 1) {\n        //            startParent.children[i].remove();\n        //        }\n        //\n        //        startParent.insertBefore(ol,startParent.children[startIndex + 1]);\n        //\n        //        console.log('startParent', startParent);\n        //\n        //        this.update.emit();\n        //\n        //    }\n        //}\n\n    }\n\n}"]}