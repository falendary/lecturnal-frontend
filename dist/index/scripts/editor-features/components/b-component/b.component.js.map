{"version":3,"sources":["editor-features/components/b-component/b.component.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAAqD;AACrD,sCAA4C;AAW5C,IAAa,UAAU;IALvB;QAO0C,WAAM,GAAG,IAAI,mBAAY,EAAE,CAAC;IAkCtE,CAAC;IA1BG,iCAAY,GAAZ;QAEI,QAAQ,CAAC,WAAW,CAAC,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;QAE1C,wCAAwC;QACxC,sCAAsC;QACtC,wEAAwE;QACxE,EAAE;QACF,8DAA8D;QAC9D,EAAE;QACF,yDAAyD;QACzD,EAAE;QACF,mEAAmE;QACnE,8CAA8C;QAC9C,EAAE;QACF,eAAe;QACf,wIAAwI;QACxI,OAAO;QACP,EAAE;QACF,EAAE;QACF,wBAAwB;QACxB,GAAG;IAGP,CAAC;IAEL,iBAAC;AAAD,CApCA,AAoCC,IAAA;AAlCyC;IAArC,aAAM,CAAC,4BAA4B,CAAC;;0CAA6B;AAGlE;IADC,YAAK,CAAC,SAAS,CAAC;;2CACM;AAGvB;IADC,YAAK,CAAC,UAAU,CAAC;;4CACM;AARf,UAAU;IALtB,gBAAS,CAAC;QACP,QAAQ,EAAE,iBAAiB;QAC3B,QAAQ,EAAE,kBAAkB;KAC/B,CAAC;GAEW,UAAU,CAoCtB;AApCY,gCAAU","file":"b.component.js","sourcesContent":["import {Component,EventEmitter} from '@angular/core';\nimport {Input, Output} from '@angular/core';\nimport {IEditorButton} from '../interfaces/IEditorButton';\nimport {SelectionHelper} from '../../helpers/selection.helper';\nimport {SelectionData} from '../../models/selectionData';\nimport {NodeHelper} from '../../helpers/node.helper';\n\n@Component({\n    selector: 'b-editor-button',\n    template: 'b.component.html'\n})\n\nexport class BComponent implements IEditorButton {\n\n    @Output('contenteditableModelChange') update = new EventEmitter();\n\n    @Input('content')\n    public content: string;\n\n    @Input('editorId')\n    public editorId: string;\n\n    wrapSelected(): void {\n\n        document.execCommand('bold', false, null);\n\n        //let selection = window.getSelection();\n        //let node: any = selection.focusNode;\n        //let selectionData: SelectionData = SelectionHelper.getSelectionData();\n        //\n        //if (document.getElementById(this.editorId).contains(node)) {\n        //\n        //    if(NodeHelper.haveParentWithLocalName(node, 'b')) {\n        //\n        //        let parent = NodeHelper.findParentByLocalName(node, 'b');\n        //        parent.outerHTML = parent.innerHTML;\n        //\n        //    }  else {\n        //        node.parentNode.innerHTML = selectionData.startString + '<b>' + selectionData.middleString + '</b>' + selectionData.endString;\n        //    }\n        //\n        //\n        //    this.update.emit()\n        //}\n\n\n    }\n\n}"]}