{"version":3,"sources":["app/repositories/auth.repository.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAAyC;AACzC,8BAAmC;AACnC,sCAAsE;AAEtE,iCAA+B;AAC/B,mCAAiC;AAGjC,IAAa,cAAc;IAEvB,wBAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAE1B,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;IAEzC,CAAC;IAEM,8BAAK,GAAZ,UAAa,QAAgB,EAAE,QAAgB;QAE3C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,2BAA2B,EAAE,IAAI,CAAC,SAAS,CAAC,EAAC,QAAQ,UAAA,EAAE,QAAQ,UAAA,EAAC,CAAC,CAAC;aACnF,GAAG,CAAC,UAAC,GAAa,IAAK,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC;aAClC,KAAK,CAAC,UAAC,KAAU,IAAK,OAAA,eAAU,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,IAAI,cAAc,CAAC,EAAtD,CAAsD,CAAC,CAAC;IAEvF,CAAC;IAEM,+BAAM,GAAb,UAAc,QAAgB,EAAE,QAAgB,EAAE,KAAa;QAC3D,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,4BAA4B,EAAE,IAAI,CAAC,SAAS,CAAC,EAAC,QAAQ,UAAA,EAAE,QAAQ,UAAA,EAAE,KAAK,OAAA,EAAC,CAAC,CAAC;aAC3F,GAAG,CAAC,UAAC,GAAa,IAAK,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC;aAClC,KAAK,CAAC,UAAC,KAAU,IAAK,OAAA,eAAU,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,IAAI,cAAc,CAAC,EAAtD,CAAsD,CAAC,CAAC;IACvF,CAAC;IAEM,+BAAM,GAAb;QAEI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;IAEhD,CAAC;IAEL,qBAAC;AAAD,CA5BA,AA4BC,IAAA;AA5BY,cAAc;IAD1B,iBAAU,EAAE;qCAGiB,WAAI;GAFrB,cAAc,CA4B1B;AA5BY,wCAAc","file":"auth.repository.js","sourcesContent":["import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/Rx';\nimport {Http, Response, Headers, RequestOptions} from '@angular/http';\n\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\n\n@Injectable()\nexport class AuthRepository {\n\n    constructor(private http: Http) {\n\n        console.log('repository', this.http);\n\n    }\n\n    public login(username: string, password: string): Observable<Response> {\n\n        return this.http.post('backend/web/v1/auth/login', JSON.stringify({username, password}))\n            .map((res: Response) => res.json())\n            .catch((error: any) => Observable.throw(error.json().error || 'Server error'));\n\n    }\n\n    public signup(username: string, password: string, email: string): Observable<Response> {\n        return this.http.post('backend/web/v1/auth/signup', JSON.stringify({username, password, email}))\n            .map((res: Response) => res.json())\n            .catch((error: any) => Observable.throw(error.json().error || 'Server error'));\n    }\n\n    public logout(): void {\n\n        this.http.get('backend/web/v1/auth/logout');\n\n    }\n\n}"]}