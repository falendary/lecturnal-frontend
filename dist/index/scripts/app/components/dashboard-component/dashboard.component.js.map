{"version":3,"sources":["app/components/dashboard-component/dashboard.component.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAAwC;AACxC,0CAAuC;AACvC,0DAAuD;AAEvD,4EAAwE;AACxE,8DAA0D;AAE1D,4CAAyC;AAQzC,IAAa,kBAAkB;IAI3B,4BAAoB,MAAc,EAAU,mBAAwC,EAAU,YAA0B;QAApG,WAAM,GAAN,MAAM,CAAQ;QAAU,wBAAmB,GAAnB,mBAAmB,CAAqB;QAAU,iBAAY,GAAZ,YAAY,CAAc;QAEpH,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;QAEvC,gIAAgI;QAEhI,IAAI,CAAC,OAAO,EAAE,CAAC;IAEnB,CAAC;IAEM,oCAAO,GAAd;QAAA,iBAOC;QALG,IAAI,eAAe,GAAsB,EAAE,CAAC;QAE5C,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,SAAS,CAAC,UAAA,aAAa;YACrE,KAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACvC,CAAC,CAAC,CAAA;IACN,CAAC;IAEM,4CAAe,GAAtB;QAAA,iBAgBC;QAdG,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;QAEhC,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,IAAI,2BAAY,EAAE,CAAC,CAAC,SAAS,CAAC,UAAA,YAAY;YAEtE,IAAI,KAAK,GAAG,IAAI,aAAK,EAAE,CAAC;YAExB,KAAK,CAAC,eAAe,GAAG,YAAY,CAAC,EAAE,CAAC;YAExC,KAAI,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,EAAE,YAAY,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,UAAA,KAAK;gBAC5D,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,gBAAgB,GAAG,YAAY,CAAC,EAAE,GAAG,UAAU,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC;YAC1F,CAAC,CAAC,CAAA;QAEN,CAAC,CAAC,CAAA;IAEN,CAAC;IAEL,yBAAC;AAAD,CAzCA,AAyCC,IAAA;AAzCY,kBAAkB;IAN9B,gBAAS,CAAC;QACP,QAAQ,EAAE,WAAW;QACrB,QAAQ,EAAE,0BAA0B;QACpC,SAAS,EAAE,CAAC,0CAAmB,EAAE,4BAAY,CAAC;KACjD,CAAC;qCAM8B,eAAM,EAA+B,0CAAmB,EAAwB,4BAAY;GAJ/G,kBAAkB,CAyC9B;AAzCY,gDAAkB","file":"dashboard.component.js","sourcesContent":["import {Component} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {Presentation} from '../../models/Presentation';\n\nimport {PresentationService} from '../../services/presentation.service';\nimport {SlideService} from '../../services/slide.service';\nimport {IQueryParameter} from \"../../models/interfaces/IQueryParameter\";\nimport {Slide} from \"../../models/Slide\";\n\n@Component({\n    selector: 'dashboard',\n    template: 'dashboard.component.html',\n    providers: [PresentationService, SlideService]\n})\n\nexport class DashboardComponent {\n\n    presentations: Presentation[];\n\n    constructor(private router: Router, private presentationService: PresentationService, private slideService: SlideService) {\n\n        console.log('DashboardComponent init');\n\n        //this.presentations = [{id: 1, name: 'Компьютерная геометрия и графика', slides: []}, {id: 2, name: 'Веб-дизайн', slides: []}];\n\n        this.getList();\n\n    }\n\n    public getList(): void {\n\n        let queryParameters: IQueryParameter[] = [];\n\n        this.presentationService.getList(queryParameters).subscribe(presentations => {\n            this.presentations = presentations;\n        })\n    }\n\n    public addPresentation(): void {\n\n        console.log('add presentation');\n\n        this.presentationService.create(new Presentation()).subscribe(presentation => {\n\n            let slide = new Slide();\n\n            slide.presentation_id = presentation.id;\n\n            this.slideService.create(slide, presentation.id).subscribe(slide => {\n                this.router.navigateByUrl('/presentation/' + presentation.id + '/slides/' + slide.id);\n            })\n\n        })\n\n    }\n\n}"]}