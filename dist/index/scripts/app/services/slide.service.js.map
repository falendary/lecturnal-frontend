{"version":3,"sources":["app/services/slide.service.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAAyC;AAEzC,qEAAiE;AAMjE,IAAa,YAAY;IAErB,sBAAoB,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;IAAG,CAAC;IAExD,8BAAO,GAAP,UAAQ,UAA6B,EAAE,cAAsB;QAEzD,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,UAAU,EAAE,cAAc,CAAC,CAAC;IACpE,CAAC;IAED,+BAAQ,GAAR,UAAS,cAAsB,EAAE,OAAe;QAC5C,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC;IAClE,CAAC;IAED,6BAAM,GAAN,UAAO,IAAW,EAAE,cAAsB,EAAE,OAAe;QACvD,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,EAAE,cAAc,EAAE,OAAO,CAAC,CAAC;IACtE,CAAC;IAED,6BAAM,GAAN,UAAO,IAAa,EAAE,cAAsB;QACxC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;IAC7D,CAAC;IAED,kCAAW,GAAX,UAAY,cAAsB,EAAE,OAAe;QAC/C,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC;IAC9D,CAAC;IAEL,mBAAC;AAAD,CAzBA,AAyBC,IAAA;AAzBY,YAAY;IADxB,iBAAU,EAAE;qCAG4B,kCAAe;GAF3C,YAAY,CAyBxB;AAzBY,oCAAY","file":"slide.service.js","sourcesContent":["import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/Rx';\nimport {SlideRepository} from '../repositories/slide.repository';\nimport {IQueryParameter} from '../models/interfaces/IQueryParameter';\nimport {IEntity} from '../models/interfaces/IEntity';\nimport {Slide} from '../models/Slide';\n\n@Injectable()\nexport class SlideService {\n\n    constructor(private slideRepository: SlideRepository) {}\n\n    getList(parameters: IQueryParameter[], presentationId: number): Observable<Slide[]> {\n\n        return this.slideRepository.getList(parameters, presentationId);\n    }\n\n    getByKey(presentationId: number, slideId: number): Observable<Slide> {\n        return this.slideRepository.getByKey(presentationId, slideId);\n    }\n\n    update(item: Slide, presentationId: number, slideId: number): Observable<Slide> {\n        return this.slideRepository.update(item, presentationId, slideId);\n    }\n\n    create(item: IEntity, presentationId: number): Observable<Slide> {\n        return this.slideRepository.create(item, presentationId);\n    }\n\n    deleteByKey(presentationId: number, slideId: number): void {\n        this.slideRepository.deleteByKey(presentationId, slideId);\n    }\n\n}"]}